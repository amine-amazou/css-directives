let CssDirectives=function(t,e){"use strict";function r(){return!0}function i(t){return t[0]}function s(t){return Object.keys(t)}function n(t){return(t instanceof Object||"object"==typeof t)&&!Array.isArray(t)}function a(t){return[t]}class o{static customDirectives={};static register(t,e){return n(t)?this.customDirectives={...this.customDirectives,...function t(e={}){let r={};return"object"==typeof e&&s(e).forEach(t=>{let i=e[t];r[t.toLowerCase()]=i}),r}(t)}:this.customDirectives[t.toLowerCase()]=e,!0}static apply(t,e){let r=t();if(n(r))e.style[r.attributeKey]=r.value;else{var i,a;!function t(e,r){e.forEach(t=>r(t))}((i=r,null!==Array.isArray?Array.isArray(i):i instanceof Array)?r:[a=r],t=>{var r;(r=this.customDirectives[t]??[],null!==Object.entries?Object.entries(r):s(r).forEach(t=>[t,r[t]])).forEach(t=>{e.style[t[0]]=t[1]})})}return!0}static isCustomDirective(t){return s(this.customDirectives).includes(t)}static merge(t=[],e){let r={};return t.forEach(t=>{Object.assign(r,this.customDirectives[t.toLowerCase()])}),this.register(e,r)}static init(){var r;r=()=>{var t;t=(t,e)=>{this.apply(()=>{var e,r,i;if("css:attach"==(e=t.nodeName).toLowerCase())return(r=t.nodeValue).toLowerCase().split(" ");let s=function t(e){var r,i,s;let n,[a,o]=((n=(r=e).split("-")).push(""),n);return""===(i=o)?a:`${a}${(s=o)[0].toUpperCase()}${o.slice(1).toLowerCase()}`}((i=t.nodeName).replace("css:",""));return this.isCustomDirective(s)?s:{attributeKey:s,value:t.nodeValue}},e),function t(e,r){r.removeAttribute(e)}(t.nodeName,e)},(null!==e.body.querySelectorAll?e.body.querySelectorAll("*"):Array.from(e.body.children)).forEach(e=>{var r;[...(r=e).attributes].filter(t=>{var e;return(e=t).nodeName.startsWith("css:")}).forEach(r=>t(r,e))})},t.addEventListener("DOMContentLoaded",r)}}return class t{static register(t,e={}){if("string"!=typeof t&&"object"!=typeof t)throw TypeError('Invalid argument type: "nameOrDirectives" parameter must be a string or an object.');if("object"!=typeof e)throw TypeError('Invalid argument type: "styles" parameter must be an object.');return o.register(t,e)}static merge(t=[],e){if("string"!=typeof e)throw TypeError('Invalid argument type: "inDirective" parameter must be a string.');if(""===e.trim())throw Error('Invalid argument value: "inDirective" parameter must not be an empty string.');return o.merge(t,e)}static init(){return o.init()}}}(window,document);
